<?php

/**
 * @file
 * Main finctions for booking calendar.
 */

/**
 * Implements hook_menu().
 */
function booking_calendar_menu() {
  $items['admin/config/content/booking_calendar'] = array(
    'page callback' => 'booking_calendar_admin_settings',
    'access arguments' => array('administer booking calendar'),
    'type' => MENU_CALLBACK,
  );
  $items['booking/calendar/ajax'] = array(
    'page callback' => 'booking_calendar_month_ajax',
    'access arguments' => array('administer booking calendar'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function booking_calendar_permission() {
  return array(
    'administer booking calendar' => array(
      'title' => t('Administer the Booking Calendar'),
      'description' => t('Allow users use Booking Calendar'),
    ),
  );
}


/**
 * Implements hook_theme().
 */
function booking_calendar_theme($existing, $type, $theme, $path) {
  return array(
    'booking_calendar_admin' => array(
      'variables' => array(
        'week' => NULL,
        'month' => NULL,
        'year' => NULL,
      ),
    ),
    'booking_calendar_admin_table_day_hours' => array(
      'variables' => array(
        'year' => NULL,
        'month' => NULL,
        'day' => NULL,
      ),
    ),
  );
}

/**
 * Defines form callback for the admin/config/availability-calendar/settings
 * page.
 */
function booking_calendar_admin_settings() {

  drupal_add_js(drupal_get_path('module', 'booking_calendar') . '/js/calendar.js');
  drupal_add_css(drupal_get_path('module', 'booking_calendar') . '/css/calendar.css');

  module_load_include('inc', 'booking_calendar', 'booking_calendar.form');
  module_load_include('inc', 'booking_calendar', 'booking_calendar');


  $output = '';
  $output .= '<div id="t3"></div>';
  $output .= '<div class="flags">
                <ul>
                    <li class="this"><span class="av">' . t('Pasiekiamas') . '</span></li>
                    <li><span class="na">' . t('Pilnai nubaustas') . '</span></li>
                    <li><span class="opt">' . t('Pašalinti nubaustas') . '</span></li>
                </ul>
            </div>';

  $output .= '<div id="calendar-wrapper">';
  $output .= theme('booking_calendar_admin', array('week' => _booking_calendar_calculate()));
  $output .= '</div>';

  $output .= '<div id="hours-table-wrapper">';

  if (!empty($_SESSION['current_select'])) {
    $current_state = $_SESSION['current_select'];
    $year = $current_state['year'];
    $month = $current_state['month'];
    $day = $current_state['day'];

    $output .= theme('booking_calendar_admin_table_day_hours', array(
      'year' => $year,
      'month' => $month,
      'day' => $day,
    ));
  }
  else {
    $output .= theme('booking_calendar_admin_table_day_hours');
  }

  $output .= '</div>';

  return $output;
}


/**
 * @file
 */


/**
 * Ajax callback.
 */
function booking_calendar_month_ajax() {
  module_load_include('inc', 'booking_calendar', 'booking_calendar.form');
  if (count($_POST)) {
    // We calculate the number of days in the current month.
    $dayofmonth = date('t');
    // Counter for the days of the month.
    $day_count = 1;

    isset($_POST['day']) ? $day = $_POST['day'] : $day = date('j');

    isset($_POST['month_number']) ? $month = $_POST['month_number'] : $month = date('n');

    isset($_POST['year']) ? $year = $_POST['year'] : $year = date('Y');

    isset($_POST['table']) ? $table = json_decode($_POST['table']) : $table = array();

    isset($_POST['current_select']) ? $current_select = json_decode($_POST['current_select']) : $current_select = array();


    $table = (array) $table;

    $current_select = (array) $current_select;


    // Save values in session
    $_SESSION['tables'][$year][$month][$day] = $table;

    if (count($current_select) > 0) {
      $_SESSION['current_select'] = $current_select;
      $current_select_base = $_SESSION['current_select'];
      variable_set('current_select', $current_select_base);
    }


    $booking_tables = $_SESSION['tables'];
    // If session is expired save value in database
    variable_set('booking_calendar_book_table', $booking_tables);


    // 1. The first week.
    $num = 0;
    for ($i = 0; $i < 7; $i++) {
      // Calculate the number of days of the week for the number of.
      $dayofweek = date('w', mktime(0, 0, 0, $month, $day_count, $year));

      // Leads to a number of the format 1 - Monday, ..., 6 - Saturday.
      $dayofweek = $dayofweek - 1;
      if ($dayofweek == -1) {
        $dayofweek = 6;
      }

      if ($dayofweek == $i) {
        // If the same days of the week,
        // Fill the array $week
        // Number of months.
        $week[$num][$i] = $day_count;
        $day_count++;
      }
      else {
        $week[$num][$i] = "";
      }
    }

    // 2. The following week of the month.
    while (TRUE) {
      $num++;
      for ($i = 0; $i < 7; $i++) {
        $week[$num][$i] = $day_count;
        $day_count++;
        // If you have reached the end of the month - leave
        // The loop.
        if ($day_count > $dayofmonth) {
          break;
        }
      }
      // If you have reached the end of the month - leave
      // From the cycle.
      if ($day_count > $dayofmonth) {
        break;
      }
    }

    // Save for curren click state.
    if (!empty($_SESSION['current_select'])) {

      $current_state = $_SESSION['current_select'];
      $year = $current_state['year'];
      $month = $current_state['month'];
      $day = $current_state['day'];

      $hours_table = theme('booking_calendar_admin_table_day_hours', array(
        'year' => $year,
        'month' => $month,
        'day' => $day,
      ));

    }
    else {
      $hours_table = theme('booking_calendar_admin_table_day_hours');
    }


    $output = theme('booking_calendar_admin', array(
      'week' => $week,
      'month' => $month,
      'year' => $year,
    ));
    $response = array(
      'output' => $output,
      'hours_table' => $hours_table,
    );

    return drupal_json_output($response);
  }
  return drupal_not_found();
}

/**
 * @file
 */

/**
 * @param $variables
 * @return string
 */
function theme_booking_calendar_admin_table_day_hours($variables) {
  module_load_include('inc', 'booking_calendar', 'booking_calendar');
  $output = '';

  $hours = array();
  $minutes = 0;
  $interval = 30;


  $hours_settings = variable_get('booking_hours_settings', '');
  if (empty($hours_settings)) {
    $hour_end = 22;
    $hour_begin = 8;
  }
  else {
    $hour_end = $hours_settings['hour_end'];
    $hour_begin = $hours_settings['hour_begin'];
  }


  //count = (($hour_end - $hound_begin)*interval for hours)+2;
  $count = (($hour_end - $hour_begin) * 2) + 2;


  for ($i = 0; $i < $count; $i++) {
    $hours[$i] = date('H : i', mktime($hour_begin, $minutes, 0, date('n'), date('j'), date('Y')));
    $minutes += $interval;
  }

  if (!empty(variable_get('booking_calendar_names_courts', ''))) {
    $courts = variable_get('booking_calendar_names_courts', '');

    if (!empty($_SESSION['table_hours'])) {
      $year = $variables['year'];
      $month = $variables['month'];
      $day = $variables['day'];
      if (isset($_SESSION['table_hours'][$year]) && isset($_SESSION['table_hours'][$year][$month]) && isset($_SESSION['table_hours'][$year][$month][$day])) {
        $courts = $_SESSION['table_hours'][$year][$month][$day];
      }
    }
  }
  else {
    $courts = _default_hours_and_name_courts();
  }


  //Add fist column - time.
  array_unshift($courts, array('name' => t('TIME')));


  // Add admin setting form for table hours.
  $court_form = drupal_get_form('booking_calendar_courts_form');
  $courts_form_html = render($court_form);

  $output .= $courts_form_html;


  $output .= '<div id="booking-courts-wrapper"><table id="booking-courts"><thead><tr>';
  foreach ($courts as $court) {
    if (!empty($court['name'])) {
      $output .= '<td>' . $court['name'] . '</td>';
    }
    else {
      $output .= '<td></td>';
    }
  }
  $output .= '</tr></thead>';
  foreach ($hours as $hour) {
    $output .= '<tr>';

    $a = 0;
    foreach ($courts as $court) {
      if ($a == 0) {
        $output .= '<td>' . $hour . '</td>';
      }
      else {
        if ($court['name']) {
          $hour_key = str_replace(' : ', '_', $hour);
          if (!empty(variable_get('booking_calendar_names_courts', ''))) {
            if (isset($court['hours'][$hour]['price'])) {
              $output .= '<td>' . $court['hours'][$hour]['price'] . '€' . '</td>';
            }
            else {
              $output .= '<td>' . 0 . '€' . '</td>';
            }

          }
          else {
            $output .= '<td>' . $court['hours'][$hour]['price'] . '</td>';
          }
        }
      }
      $a++;
    }
    '</tr>';
  }
  $output .= '</table></div>';

  return $output;
}


/**
 *
 */
function theme_booking_calendar_admin($variables) {

  isset($variables['week']) ? $week = $variables['week'] : $week = _calendar_calculate();;
  isset($variables['month']) ? $month = $variables['month'] : $month = date('n');
  isset($variables['year']) ? $year = $variables['year'] : $year = date('Y');

  $month_name = date('F', mktime(0, 0, 0, $month, date("j"), date('Y')));

  // Translate months.
  switch ($month_name) {
    case 'January' :
      $month_name = 'Sausis';
      break;
    case 'February' :
      $month_name = 'Vasaris';
      break;
    case 'March' :
      $month_name = 'Kovas';
      break;
    case 'April' :
      $month_name = 'Balandis';
      break;
    case 'May' :
      $month_name = 'Gegužė';
      break;
    case 'June' :
      $month_name = 'Birželis';
      break;
    case 'July' :
      $month_name = 'Liepa';
      break;
    case 'August' :
      $month_name = 'Rugpjūtis';
      break;
    case 'September' :
      $month_name = 'Rugsėjis';
      break;
    case 'October' :
      $month_name = 'Spalis';
      break;
    case 'November' :
      $month_name = 'Lapkritis';
      break;
    case 'December' :
      $month_name = 'Gruodis';
      break;
  }


  // 3. Print the contents of the array $ week
  // A calendar
  // Display the table.
  $output = '<div class="year">' . $year . '</div>
             <div id="controls">
                <div data-year="' . $year . '" data-month="' . $month . '" class="prev">' . t('Ankstesnis') . '</div><div class="month">' . $month_name . '</div><div  data-year="' . $year . '" data-month="' . $month . '" class="next">' . t('Kitas') . '</div></div>';
  $output .= '<table id="booking-calendar"><thead>';

  $output .= '<thead><tr>';
  for ($i = 6; $i < 13; $i++) {

    $output .= '<td>' . date('l', mktime(0, 0, 0, date('m'), $i, $year)) . '</td>';
  }

  $output .= '</tr></thead>';
  for ($i = 0; $i < count($week); $i++) {
    $output .= "<tr>";
    for ($j = 0; $j < 7; $j++) {
      if (!empty($week[$i][$j])) {

        // If you are dealing with a Saturday and Sunday
        // highlights them.

        if ($j == 5 || $j == 6) {
          $classes = 'weekends';
          if ($week[$i][$j] == date('j')) {
            $classes = 'this weekends';
          }
        }
        elseif ($week[$i][$j] == date('j')) {
          $classes = 'this';
        }
        else {
          $classes = '';
        }
        if (isset($_SESSION['tables'])) {
          foreach ($_SESSION['tables'][$year][$month] as $key => $value) {
            if (!empty($_SESSION['tables'][$year][$month][$key])) {
              if ($j == $_SESSION['tables'][$year][$month][$key]['week_j'] && $i == $_SESSION['tables'][$year][$month][$key]['week_i']) {
                $classes = $_SESSION['tables'][$year][$month][$key]['chan'];
              }
            }
          }
        }
        else {
          $booking_table = variable_get('booking_calendar_book_table', '');
          if (!empty($booking_table)) {
            foreach ($booking_table[$year][$month] as $key => $value) {
              if (!empty($booking_table[$year][$month][$key])) {
                if ($j == $booking_table[$year][$month][$key]['week_j'] && $i == $booking_table[$year][$month][$key]['week_i']) {
                  $classes = $booking_table[$year][$month][$key]['chan'];
                }
              }
            }
          }
        }
        // Current box
        if (!empty($_SESSION['current_select'])) {
          if ($j == $_SESSION['current_select']['week_j'] && $i == $_SESSION['current_select']['week_i']
            && $year == $_SESSION['current_select']['year'] && $month == $_SESSION['current_select']['month']
          ) {
            $classes .= ' ' . 'select';
          }
        }


        $output .= '<td week_i="' . $i . '" week_j = "' . $j . '" class="' . $classes . '">' . $week[$i][$j] . '</td>';
      }
      else {
        $output .= "<td>&nbsp;</td>";
      }
    }
    $output .= "</tr>";
  }
  $output .= "</table>";

  return $output;
}